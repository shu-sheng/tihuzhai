<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shusheng.tihuzhai.dao.mappers.auto.PdfTemplateMapper" >
  <resultMap id="BaseResultMap" type="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplate" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="pdf_name" property="pdfName" jdbcType="VARCHAR" />
    <result column="type_code" property="typeCode" jdbcType="VARCHAR" />
    <result column="raw_add_time" property="rawAddTime" jdbcType="TIMESTAMP" />
    <result column="raw_update_time" property="rawUpdateTime" jdbcType="TIMESTAMP" />
    <result column="is_default" property="isDefault" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplate" extends="BaseResultMap" >
    <result column="xsl_content" property="xslContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, pdf_name, type_code, raw_add_time, raw_update_time, is_default, state
  </sql>
  <sql id="Blob_Column_List" >
    xsl_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pdf_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pdf_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pdf_template
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pdf_template
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplateExample" >
    delete from pdf_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplate" >
    insert into pdf_template (id, name, pdf_name, 
      type_code, raw_add_time, raw_update_time, 
      is_default, state, xsl_content
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{pdfName,jdbcType=VARCHAR}, 
      #{typeCode,jdbcType=VARCHAR}, #{rawAddTime,jdbcType=TIMESTAMP}, #{rawUpdateTime,jdbcType=TIMESTAMP}, 
      #{isDefault,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{xslContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplate" >
    insert into pdf_template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pdfName != null" >
        pdf_name,
      </if>
      <if test="typeCode != null" >
        type_code,
      </if>
      <if test="rawAddTime != null" >
        raw_add_time,
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="xslContent != null" >
        xsl_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pdfName != null" >
        #{pdfName,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="xslContent != null" >
        #{xslContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplateExample" resultType="java.lang.Integer" >
    select count(*) from pdf_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pdf_template
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pdfName != null" >
        pdf_name = #{record.pdfName,jdbcType=VARCHAR},
      </if>
      <if test="record.typeCode != null" >
        type_code = #{record.typeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null" >
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null" >
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDefault != null" >
        is_default = #{record.isDefault,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.xslContent != null" >
        xsl_content = #{record.xslContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update pdf_template
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      pdf_name = #{record.pdfName,jdbcType=VARCHAR},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      is_default = #{record.isDefault,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      xsl_content = #{record.xslContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pdf_template
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      pdf_name = #{record.pdfName,jdbcType=VARCHAR},
      type_code = #{record.typeCode,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      is_default = #{record.isDefault,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplate" >
    update pdf_template
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pdfName != null" >
        pdf_name = #{pdfName,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null" >
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="xslContent != null" >
        xsl_content = #{xslContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplate" >
    update pdf_template
    set name = #{name,jdbcType=VARCHAR},
      pdf_name = #{pdfName,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      is_default = #{isDefault,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      xsl_content = #{xslContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shusheng.tihuzhai.dao.entity.auto.PdfTemplate" >
    update pdf_template
    set name = #{name,jdbcType=VARCHAR},
      pdf_name = #{pdfName,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      is_default = #{isDefault,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>