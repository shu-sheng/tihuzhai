<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shusheng.tihuzhai.dao.mappers.auto.BankBaseInfoMapper" >
  <resultMap id="BaseResultMap" type="com.shusheng.tihuzhai.dao.entity.auto.BankBaseInfo" >
    <id column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="withholding_amount" property="withholdingAmount" jdbcType="DECIMAL" />
    <result column="withdraw_amount" property="withdrawAmount" jdbcType="DECIMAL" />
    <result column="day_withholding_amount" property="dayWithholdingAmount" jdbcType="DECIMAL" />
    <result column="signed_way" property="signedWay" jdbcType="VARCHAR" />
    <result column="is_stop" property="isStop" jdbcType="VARCHAR" />
    <result column="logo_url" property="logoUrl" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="raw_add_time" property="rawAddTime" jdbcType="TIMESTAMP" />
    <result column="raw_update_time" property="rawUpdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bank_code, bank_name, withholding_amount, withdraw_amount, day_withholding_amount, 
    signed_way, is_stop, logo_url, memo, raw_add_time, raw_update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.shusheng.tihuzhai.dao.entity.auto.BankBaseInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_base_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bank_base_info
    where bank_code = #{bankCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bank_base_info
    where bank_code = #{bankCode,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.shusheng.tihuzhai.dao.entity.auto.BankBaseInfoExample" >
    delete from bank_base_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.shusheng.tihuzhai.dao.entity.auto.BankBaseInfo" >
    insert into bank_base_info (bank_code, bank_name, withholding_amount, 
      withdraw_amount, day_withholding_amount, signed_way, 
      is_stop, logo_url, memo, 
      raw_add_time, raw_update_time)
    values (#{bankCode,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{withholdingAmount,jdbcType=DECIMAL}, 
      #{withdrawAmount,jdbcType=DECIMAL}, #{dayWithholdingAmount,jdbcType=DECIMAL}, #{signedWay,jdbcType=VARCHAR}, 
      #{isStop,jdbcType=VARCHAR}, #{logoUrl,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{rawAddTime,jdbcType=TIMESTAMP}, #{rawUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.shusheng.tihuzhai.dao.entity.auto.BankBaseInfo" >
    insert into bank_base_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="withholdingAmount != null" >
        withholding_amount,
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount,
      </if>
      <if test="dayWithholdingAmount != null" >
        day_withholding_amount,
      </if>
      <if test="signedWay != null" >
        signed_way,
      </if>
      <if test="isStop != null" >
        is_stop,
      </if>
      <if test="logoUrl != null" >
        logo_url,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="rawAddTime != null" >
        raw_add_time,
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="withholdingAmount != null" >
        #{withholdingAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null" >
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="dayWithholdingAmount != null" >
        #{dayWithholdingAmount,jdbcType=DECIMAL},
      </if>
      <if test="signedWay != null" >
        #{signedWay,jdbcType=VARCHAR},
      </if>
      <if test="isStop != null" >
        #{isStop,jdbcType=VARCHAR},
      </if>
      <if test="logoUrl != null" >
        #{logoUrl,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.shusheng.tihuzhai.dao.entity.auto.BankBaseInfoExample" resultType="java.lang.Integer" >
    select count(*) from bank_base_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bank_base_info
    <set >
      <if test="record.bankCode != null" >
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null" >
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.withholdingAmount != null" >
        withholding_amount = #{record.withholdingAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.withdrawAmount != null" >
        withdraw_amount = #{record.withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.dayWithholdingAmount != null" >
        day_withholding_amount = #{record.dayWithholdingAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.signedWay != null" >
        signed_way = #{record.signedWay,jdbcType=VARCHAR},
      </if>
      <if test="record.isStop != null" >
        is_stop = #{record.isStop,jdbcType=VARCHAR},
      </if>
      <if test="record.logoUrl != null" >
        logo_url = #{record.logoUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null" >
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null" >
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bank_base_info
    set bank_code = #{record.bankCode,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      withholding_amount = #{record.withholdingAmount,jdbcType=DECIMAL},
      withdraw_amount = #{record.withdrawAmount,jdbcType=DECIMAL},
      day_withholding_amount = #{record.dayWithholdingAmount,jdbcType=DECIMAL},
      signed_way = #{record.signedWay,jdbcType=VARCHAR},
      is_stop = #{record.isStop,jdbcType=VARCHAR},
      logo_url = #{record.logoUrl,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.shusheng.tihuzhai.dao.entity.auto.BankBaseInfo" >
    update bank_base_info
    <set >
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="withholdingAmount != null" >
        withholding_amount = #{withholdingAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="dayWithholdingAmount != null" >
        day_withholding_amount = #{dayWithholdingAmount,jdbcType=DECIMAL},
      </if>
      <if test="signedWay != null" >
        signed_way = #{signedWay,jdbcType=VARCHAR},
      </if>
      <if test="isStop != null" >
        is_stop = #{isStop,jdbcType=VARCHAR},
      </if>
      <if test="logoUrl != null" >
        logo_url = #{logoUrl,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where bank_code = #{bankCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shusheng.tihuzhai.dao.entity.auto.BankBaseInfo" >
    update bank_base_info
    set bank_name = #{bankName,jdbcType=VARCHAR},
      withholding_amount = #{withholdingAmount,jdbcType=DECIMAL},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      day_withholding_amount = #{dayWithholdingAmount,jdbcType=DECIMAL},
      signed_way = #{signedWay,jdbcType=VARCHAR},
      is_stop = #{isStop,jdbcType=VARCHAR},
      logo_url = #{logoUrl,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP}
    where bank_code = #{bankCode,jdbcType=VARCHAR}
  </update>
</mapper>